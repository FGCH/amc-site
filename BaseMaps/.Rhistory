estimates <- subset(estimates, var != c("sigma2"))
##### Create comparison plot ####
cols <- c("#B35B40", "#696969")
breaks <- c("pres_party", "ExpenditureGDP", "recession", "DebtGDP", "time_to_election", "PotentialGDP", "DiscountRate2qChange", "UNRATE", "GlobalModelAfter 1996")
break.labels <- c("Dem. President", "Gov. Expenditure (% GDP)", "Recession", "Gov. Debt (% GDP)", "Quarters Until Election", "Output Gap", "Discount Rate Change", "Unemployment Rate", "Global Model")
est.plot <- ggplot(data = estimates, aes(x = reorder(var, lower), ymin = lower, ymax = upper, colour = match)) +
facet_grid(~ method) +
geom_linerange(size = 3, alpha = 0.6) +
scale_x_discrete(breaks = breaks, labels = break.labels) +
#scale_y_continuous(breaks = c(-1, 0.0, 0.5), labels = c("-1", "0", "0.5")) +
scale_color_manual(values = cols, name = "") +
geom_hline(aes(intercept= 0), linetype = "dotted") +
ylab("\nCoefficient Estimate") + xlab("") +
coord_flip() +
theme_bw(base_size = 11)
print(est.plot)
rstudio::viewData(cpi.data)
install.packages(c("ape", "foreign", "lattice", "maptools", "Matrix", "nlme", "R.utils", "rpart", "shapes", "survival", "timereg", "xts", "yaml"))
URL <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcCountryYear.csv"
AMC <- getURL(URL)
source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/LoadRPackages.R")
devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/LoadRPackages.R")
# Load most recent data
URL <- "https://raw.github.com/christophergandrud/amcData/master/MainData/amcCountryYear.csv"
AMC <- getURL(URL)
AMC <- read.csv(textConnection(AMC))
rstudio::viewData(AMC)
#### Create lagged crisis variable (Crisis onset year -3) ####
# Create individual year lags
AMCLag <- ddply(AMC, .(country), transform, SCL1 = c(NA, SystemicCrisis[-length(SystemicCrisis)]))
AMCLag <- ddply(AMCLag, .(country), transform, SCL2 = c(NA, SCL1[-length(SCL1)]))
?lag
# Create combined lagged variable
attach(AMCLag)
AMCLag$SystemicCrisisLag3 <- SystemicCrisis + SCL1 + SCL2
detach(AMCLag)
# Remove old lag variables
AMCLag$SCL1 <- AMCLag$SCL2 <- NULL
lg <- function(x)c(x[2:(length(x))], NA)
AMCLag <- ddply(AMCLag, .(country), transform, ElectionYear1 = lg(ElectionYear))
AMCLag$ElectionYear1[AMCLag$ElectionYear1 == 2] <- "NoElection"
AMCLag$ElectionYear1[AMCLag$ElectionYear1 == 1] <- "Election"
#### Remove (De)centralised category
AMCLag$AMCType[AMCLag$AMCType == "(De)centralised"] <- "Decentralised"
library(crrSC)
library(cmprsk)
# devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/LoadRPackages.R")
# devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/PaperDataLoadClean.R")
devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/LoadRPackages.R")
devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/PaperDataLoadClean.R")
AMCLag$AMCStatus <- 1
AMCLag$AMCStatus[AMCLag$AMCType == "Centralised"] <-2
AMCLag$AMCStatus[AMCLag$AMCType == "Decentralised"] <-3
?crrs
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, execrlc, SystemicCrisisLag3),
failcode = 2,
ctype = 1,
strata = country)
detach(AMCLag)
print(M1)
fix(`M1`)
names(crrs)
fix(`M1`)
library(simtvc)
??simtvc
library(knitr)
Test <- print(M1, "coefficients")
Test <- print(M1, "coefficients:")
Test <- print(crrs)
Test <- print(M1)
fix(Test)
citation(simtvc)
library(simtvc)
citation("simtvc")
library(cmprsk)
library(crrSC)
devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/LoadRPackages.R")
devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/PaperDataLoadClean.R")
AMCLag$AMCStatus <- 1
AMCLag$AMCStatus[AMCLag$AMCType == "Centralised"] <-2
AMCLag$AMCStatus[AMCLag$AMCType == "Decentralised"] <-3
# Stratified competing risks model
with (AMCLag){
with (AMCLag){
with(AMCLag){
?with
with(AMCLag, {
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, execrlc, SystemicCrisisLag3),
failcode = 2,
ctype = 1,
strata = country)
})
print(M1)
with(AMCLag, {
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, execrlc, SystemicCrisisLag3),
failcode = 2,
ctype = 1,
strata = country)
print(M1)
})
)
M1 <- crrs(ftime = year,
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, execrlc, SystemicCrisisLag3),
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, execrlc, SystemicCrisisLag3),
failcode = 2,
ctype = 1,
strata = country)
detach(AMCLag)
print(M1)
fix(`M1`)
plot.cuminc
?plot.cuminc
?cuminc
cuminc
?strata
install.packages("riskRegression")
library(riskRegression)
strata(country), data = AMCLag, cause = 2)
M1 < FGR(Hist(year, AMCStatus) ~ govfrac + execrlc + SystemicCrisisLag3 + strata(country), data = AMCLag, cause = 2)
M1 < FGR(Hist(year, AMCStatus) ~ govfrac + execrlc + SystemicCrisisLag3 + strataa(country), data = AMCLag, cause = 2)
M1 < FGR(Hist(year, AMCStatus) ~ govfrac + execrlc + SystemicCrisisLag3 + strata(country), data = AMCLag, cause = 2)
M2 <- FGR(Hist(year, AMCStatus) ~ govfrac + execrlc + SystemicCrisisLag3 + strata(country), data = AMCLag, cause = 2)
M2 <- ARR(Hist(year, AMCStatus) ~ govfrac + execrlc + SystemicCrisisLag3 + strata(country), data = AMCLag, cause = 2)
print(M2)
print(M1)
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, factor(execrlc), SystemicCrisisLag3),
failcode = 2,
ctype = 1,
strata = country)
detach(AMCLag)
print(M1)
print(M2)
print(M2)
print(M1)
plotEffects
plotEffects(M2)
?hist
?Surv
?crr
Test <- M1$coef
Test
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, as.factor(execrlc), SystemicCrisisLag3),
failcode = 2,
ctype = 1,
strata = country)
detach(AMCLag)
print(M1)
attach(AMCLag)
M3 <- crr(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, as.factor(execrlc), SystemicCrisisLag3),
failcode = 2,
cengroup = country)
detach(AMCLag)
summary(M3)
attach(AMCLag)
M3 <- crr(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, execrlc, SystemicCrisisLag3),
failcode = 2,
cengroup = country)
detach(AMCLag)
summary(M3)
print(M1)
?vcoc
vcoc
?vcov
vcov
UseMethod("vcov")
UseMethod("vcov")
Test <- vcov(M1)
rstudio::viewData(Test)
TestAgain <- cuminc(M1)
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 2,
ctype = 1,
strata = country)
Test <- cuminc(M1)
?cumin
?cuminc
attach(AMCLag)
M2 <- cuminc(ftime = year,
detach(AMCLag)
fstatus = AMCStatus,
strata = country)
detach(AMCLag)
############## Try to figure out how to similuate using normal dist. Main issue: CIF for Strata #######
detach(AMCLag)
attach(AMCLag)
M2 <- cuminc(ftime = year,
fstatus = AMCStatus,
strata = country)
print(M2)
plot(M2)
range(AMCLag$year)
attach(AMCLag)
M2 <- cuminc(ftime = (year - 1979),
detach(AMCLag)
detach(AMCLag)
attach(AMCLag)
M2 <- cuminc(ftime = (year - 1979),
fstatus = AMCStatus,
strata = country)
detach(AMCLag)
print(M2)
plot(M2)
?rmultnorm
library(MSBVAR)
?rmultnorm
library(foreign)
write.dta(AMCLag, file = "~/Desktop/AMC.dta")
print(M1)
exp(0.3417)
attach(AMCLag)
M1 <- crrs(ftime = year,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 2,
ctype = 1,
strata = country)
detach(AMCLag)
print(M1)
attach(AMCLag)
M1 <- crrs(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 2,
ctype = 1,
strata = country)
detach(AMCLag)
print(M1)
attach(AMCLag)
M1 <- crrs(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 2,
# ctype = 1,
strata = country)
detach(AMCLag)
print(M1)
rstudio::viewData(AMCLag)
?crrc
AMCLag$AMCStatus[AMCLag$year == 2012 & AMCLag$NumAMCCountryNoNA == 0] <- 4
range(AMCLag$AMCStatus)
summary(AMCLag$AMCStatus)
?crrc
devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/LoadRPackages.R")
devtools::source_url("https://raw.github.com/christophergandrud/amcData/master/SourceCode/Paper1Source/PaperDataLoadClean.R")
AMCLag$AMCStatus <- 1
AMCLag$AMCStatus[AMCLag$AMCType == "Centralised"] <-2
AMCLag$AMCStatus[AMCLag$AMCType == "Decentralised"] <-3
AMCLag$AMCStatus[AMCLag$year == 2012 & AMCLag$NumAMCCountryNoNA == 0] <- 4
# Stratified competing risks model
library(cmprsk)
library(crrSC)
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 2,
cencode = 1,
cluster = country)
detach(AMCLag)
print(M1)
AMCLag$AMCStatus <- NA
AMCLag$AMCStatus[AMCLag$AMCType == "Centralised"] <-2
AMCLag$AMCStatus[AMCLag$AMCType == "Decentralised"] <-3
AMCLag$AMCStatus[AMCLag$year == 2012 & AMCLag$NumAMCCountryNoNA == 0] <- 4
# Stratified competing risks model
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 2,
cencode = 1,
cluster = country)
detach(AMCLag)
print(M1)
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 2,
cencode = 1,
cluster = country)
detach(AMCLag)
print(M1)
rstudio::viewData(AMCLag)
AMCLag$AMCStatus <- 0
AMCLag$AMCStatus[AMCLag$AMCType == "Centralised"] <-2
AMCLag$AMCStatus[AMCLag$AMCType == "Decentralised"] <-3
AMCLag$AMCStatus[AMCLag$year == 2012 & AMCLag$NumAMCCountryNoNA == 0] <- 4
# Stratified competing risks model
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 2,
cencode = 1,
cluster = country)
detach(AMCLag)
print(M1)
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 2,
cencode = 4,
cluster = country)
detach(AMCLag)
print(M1)
AMCLag$AMCStatus <- 1
AMCLag$AMCStatus[AMCLag$AMCType == "Centralised"] <-2
AMCLag$AMCStatus[AMCLag$AMCType == "Decentralised"] <-3
AMCLag$AMCStatus[AMCLag$year == 2012 & AMCLag$NumAMCCountryNoNA == 0] <- 4
# Stratified competing risks model
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3),
failcode = 3,
cencode = 4,
cluster = country)
detach(AMCLag)
print(M1)
data(cdata)
rstudio::viewData(cdata)
data(center)
rstudio::viewData(center)
duplicated(center$id)
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3, UDS),
failcode = 3,
cencode = 4,
cluster = country)
detach(AMCLag)
print(M1)
?crr
rstudio::viewData(AMCLag)
attach(AMCLag)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 3,
cencode = 4,
cluster = country)
detach(AMCLag)
print(M1)
?Hist
data(Melenoma)
library(riskRegression)
data(Melenoma)
data(Melanoma)
rstudio::viewData(Melanoma)
rstudio::viewData(AMCLag)
AMCShort <- subset(AMCLag, AMCAnyCreated == 1)
rstudio::viewData(AMCShort)
AMCShort2 <- subset(AMCLag, AMCStatus == 4)
rstudio::viewData(AMCShort2)
AMCShort1 <- subset(AMCLag, AMCAnyCreated == 1)
AMCShort <- rbind(AMCShort1, AMCShort2)
attach(AMCShort)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 2,
cencode = 4,
cluster = country)
detach(AMCShort)
print(M1)
attach(AMCShort)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac),
failcode = 3,
cencode = 4,
cluster = country)
detach(AMCShort)
print(M1)
attach(AMCShort)
M1 <- crrc(ftime = year - 1980,
fstatus = AMCStatus,
cov1 = cbind(govfrac, SystemicCrisisLag3, UDS),
failcode = 3,
cencode = 4,
cluster = country)
detach(AMCShort)
print(M1)
?install.packages
library(simPH)
?simcoxtvc
?coxsimtvc
?coxsimlinear
?coxsimLinear
library(reshape2)
library(survival)
library(foreign)
library(simPH)
mydata <- read.dta ("~/Desktop/JeffWinter2012_13/Data2.dta")
group2 <- subset(mydata, group2==1)
M1 <-  coxph(Surv(begin, end, Partisan_Spell) ~ BEGINbc*POLCONIII + cumulative_crisis + polity2 + Growth + strata(new_count_ps) + cluster(imfcode), robust = TRUE, na.action=na.exclude, data=group2, control=coxph.control(eps=1e-09, iter.max=100, outer.max=100))
summary(M1)
summary(POLCONIII)
summary(group2$POLCONIII)
simM1 <- coxsimInteract(obj=M1, b="BEGINbc", b2="POLCONIII", X1 = 1, X2=seq(0, 0.7, by=.1), qi = "Hazard Rate" )
?coxsimInteract
simM1 <- coxsimInteract(obj=M1, b1 = "BEGINbc", b2 = "POLCONIII", X1 = 1, X2=seq(0, 0.7, by=.1), qi = "Hazard Rate" )
library(survival)
library(foreign)
library(simPH)
mydata <- read.dta ("~/Desktop/JeffWinter2012_13/Data2.dta")
group2 <- subset(mydata, group2==1)
M1 <-  coxph(Surv(begin, end, Partisan_Spell) ~ BEGINbc*POLCONIII + cumulative_crisis + polity2 + Growth + strata(new_count_ps) + cluster(imfcode), robust = TRUE, na.action=na.exclude, data=group2, control=coxph.control(eps=1e-09, iter.max=100, outer.max=100))
Numbers <- basehaz(M1)
rstudio::viewData(Numbers)
simM1 <- coxsimInteract(obj=M1, b1 = "BEGINbc", b2 = "POLCONIII", X1 = 1, X2=seq(0, 0.7, by=.1), qi = "Hazard Ratio" )
gginteract(simM1)
gginteract(simM1, qi = "Hazard Ratio", smoother = "lm", xlab = "\nPOLCONIII")
Test <- simM1$X2
fix(Test)
simM1 <- coxsimInteract(obj=M1, b1 = "POLCONIII", b2 = "BEGINbc", X1 = seq(0, 0.7, by=.1), X2 = 1, qi = "Hazard Ratio" )
M1 <-  coxph(Surv(begin, end, Partisan_Spell) ~ POLCONIII*BEGINbc + cumulative_crisis + polity2 + Growth + strata(new_count_ps) + cluster(imfcode), robust = TRUE, na.action=na.exclude, data=group2, control=coxph.control(eps=1e-09, iter.max=100, outer.max=100))
simM1 <- coxsimInteract(obj=M1, b1 = "POLCONIII", b2 = "BEGINbc", X1 = seq(0, 0.7, by=.1), X2 = 1, qi = "Hazard Ratio" )
gginteract(simM1, qi = "Hazard Ratio", smoother = "lm", xlab = "\nPOLCONIII")
simM1 <- coxsimInteract(obj=M1, b1 = "POLCONIII", b2 = "BEGINbc", X1 = seq(0, 0.7, by=.1), X2 = 1, qi = "Marginal Effect" )
?coxsimInteract
library(simPH)
?coxsimSpline
?ggspline
data("CarpenterFdaData")
# Load survival package
library(survival)
M1 <- coxph(Surv(acttime, censor) ~  prevgenx + lethal + deathrt1 + acutediz + hosp01  + pspline(hospdisc, df = 4) + pspline(hhosleng, df = 4) + mandiz01 + femdiz01 + peddiz01 + orphdum + natreg + vandavg3 + wpnoavg3 + pspline(condavg3, df = 4) + pspline(orderent, df = 4) + pspline(stafcder, df = 4), data = CarpenterFdaData)
Sim2 <- coxsimSpline(M1, bspline = "pspline(orderent, df = 4)",
bdata = CarpenterFdaData$orderent,
qi = "Hazard Rate",
Xj = seq(1, 30, by = 2), ci = "90", nsim = 10)
ggspline(Sim1, xlab = "\n orderent", palpha = 1)
ggspline(Sim2, qi = "Hazard Rate", zlab = "orderent", fit = "quadratic")
Full <- source_GitHubData("https://raw.github.com/christophergandrud/amcData/master/MainData/amcCountryYear.csv")
library(repmis)
library(googleVis)
library(reshape)
Full <- source_GitHubData("https://raw.github.com/christophergandrud/amcData/master/MainData/amcCountryYear.csv")
Full <- rename(Full, c(NumAMCCountryNoNA = "TotalAmcCreated"))
MapAMC <- function(y){
yearTemp <- y
TempMap <-  gvisGeoMap(subset(Full, year == yearTemp & TotalAmcCreated != 0),
locationvar = "ISOCode", numvar = "TotalAmcCreated",
options = list(
colors = "[0xECE7F2, 0xA6BDDB, 0x2B8CBE]",
width = "780px",
height = "500px"
))
print(TempMap, file = paste("AMCMap", yearTemp, ".html", sep = ""), tag = "chart")
}
#### Apply function to create maps ####
# Vector of years for maps
Years <- c(1980, 1985, 1990, 1995, 2000, 2005, 2011)
lapply(Years, MapAMC)
display.brewer.all()
library(RColorbrewer)
library(RColorBrewer)
display.brewer.all()
library(repmis)
library(googleVis)
library(reshape)
setwd("/git_repositories/amc-site/BaseMaps/")
# Load most recent data
Full <- source_GitHubData("https://raw.github.com/christophergandrud/amcData/master/MainData/amcCountryYear.csv")
# Clean for mapping
Full <- rename(Full, c(NumAMCCountryNoNA = "TotalAmcCreated"))
#### Function to produce maps ####
MapAMC <- function(y){
yearTemp <- y
TempMap <-  gvisGeoMap(subset(Full, year == yearTemp & TotalAmcCreated != 0),
locationvar = "ISOCode", numvar = "TotalAmcCreated",
options = list(
colors = "[0xECE7F2, 0xA6BDDB, 0x2B8CBE]",
width = "780px",
height = "500px"
))
print(TempMap, file = paste("AMCMap", yearTemp, ".html", sep = ""), tag = "chart")
}
#### Apply function to create maps ####
# Vector of years for maps
Years <- c(1980, 1985, 1990, 1995, 2000, 2005, 2012)
lapply(Years, MapAMC)
